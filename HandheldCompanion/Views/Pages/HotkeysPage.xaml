<Page
    x:Class="HandheldCompanion.Views.Pages.HotkeysPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmdHC="clr-namespace:HandheldCompanion.Commands.Functions.HC"
    xmlns:cmdWIN="clr-namespace:HandheldCompanion.Commands.Functions.Windows"
    xmlns:converters="clr-namespace:HandheldCompanion.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    xmlns:l="clr-namespace:HandheldCompanion.Localization"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:HandheldCompanion.Properties"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
    xmlns:viewmodels="clr-namespace:HandheldCompanion.ViewModels"
    Name="Hotkeys"
    Title="Hotkeys"
    d:Background="White"
    d:DesignHeight="1500"
    d:DesignWidth="1000"
    KeepAlive="True"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <Grid Name="MainGrid" Margin="20">

        <ikw:SimpleStackPanel Name="HotkeysPanel" Spacing="12">

            <!--  Settings  -->
            <TextBlock Style="{StaticResource BaseTextBlockStyle}" Text="Hotkeys Settings" />
            <ikw:SimpleStackPanel Spacing="6">
                <!--  Rumble on execution  -->
                <ui:SettingsCard Description="Indicates whether the controller should vibrate when a hotkey is executed" Header="Rumble on execution">
                    <ui:SettingsCard.HeaderIcon>
                        <ui:FontIcon Glyph="&#xE877;" />
                    </ui:SettingsCard.HeaderIcon>

                    <ui:ToggleSwitch IsOn="{Binding Rumble, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </ui:SettingsCard>
            </ikw:SimpleStackPanel>

            <!--  Hotkeys  -->
            <TextBlock Style="{StaticResource BaseTextBlockStyle}" Text="Hotkeys" />
            <ikw:SimpleStackPanel Spacing="6">
                <ui:SettingsCard
                    Command="{Binding CreateHotkeyCommand}"
                    Header="Create new hotkey"
                    IsClickEnabled="True"
                    IsEnabled="True"
                    Style="{DynamicResource AccentSettingsCard}">
                    <ui:SettingsCard.HeaderIcon>
                        <ui:FontIcon Glyph="&#xe710;" />
                    </ui:SettingsCard.HeaderIcon>
                </ui:SettingsCard>

                <ItemsControl ItemsSource="{Binding HotkeysList}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ikw:SimpleStackPanel Orientation="Vertical" Spacing="3" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ui:SettingsExpander
                                Name="HotkeyDefinition"
                                HorizontalAlignment="Stretch"
                                Description="{Binding Description, Mode=OneWay}"
                                Header="{Binding Name, Mode=OneWay}"
                                IsEnabled="{Binding CanUnpin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">

                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton
                                        Width="300"
                                        Height="40"
                                        VerticalAlignment="Stretch"
                                        Command="{Binding DefineButtonCommand}"
                                        IsChecked="{Binding IsListening, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">

                                        <ToggleButton.Resources>
                                            <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExecuted}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        AutoReverse="True"
                                                                        RepeatBehavior="1x"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        From="1.0"
                                                                        To="0.0"
                                                                        Duration="0:0:0.125" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Resources>

                                        <ikw:SimpleStackPanel Orientation="Horizontal" Spacing="6">
                                            <ItemsControl ItemsSource="{Binding ButtonGlyphs}">
                                                <ItemsControl.Style>
                                                    <Style TargetType="ItemsControl">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ButtonGlyphs.Count}" Value="0">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ButtonGlyphs.Count}">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ItemsControl.Style>

                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <ikw:SimpleStackPanel Orientation="Horizontal" Spacing="3" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <ui:FontIcon
                                                            FontFamily="PromptFont"
                                                            FontSize="24"
                                                            Glyph="{Binding Glyph, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                                            <ui:FontIcon.Style>
                                                                <Style TargetType="ui:FontIcon">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Foreground, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                                                                            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="Foreground" Value="{Binding Foreground, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                                                </Style>
                                                            </ui:FontIcon.Style>
                                                        </ui:FontIcon>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                            <TextBlock VerticalAlignment="Center" Text="{Binding KeyboardChord, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding KeyboardChord}" Value="">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding KeyboardChord}">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <TextBlock
                                                VerticalAlignment="Center"
                                                Style="{StaticResource CaptionTextBlockStyle}"
                                                Text="{Binding InputsChordType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </ikw:SimpleStackPanel>
                                    </ToggleButton>

                                    <Button
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        Command="{Binding EraseButtonCommand}">
                                        <ui:FontIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                            Glyph="&#xe75c;" />
                                    </Button>

                                    <ToggleButton
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        Command="{Binding PinButtonCommand}"
                                        IsChecked="{Binding IsPinned, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ui:FontIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontFamily="{DynamicResource SymbolThemeFontFamily}">
                                            <ui:FontIcon.Style>
                                                <Style TargetType="{x:Type ui:FontIcon}">
                                                    <Setter Property="Glyph" Value="&#xe718;" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsPinned}" Value="True">
                                                            <Setter Property="Glyph" Value="&#xe77a;" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ui:FontIcon.Style>
                                        </ui:FontIcon>
                                    </ToggleButton>
                                </StackPanel>

                                <ui:SettingsExpander.HeaderIcon>
                                    <ui:FontIcon
                                        Width="16"
                                        FontFamily="{Binding FontFamily, Mode=OneWay}"
                                        Glyph="{Binding Glyph, Mode=OneWay}" />
                                </ui:SettingsExpander.HeaderIcon>

                                <ui:SettingsExpander.Items>
                                    <!--  ICommand selector  -->
                                    <ui:SettingsCard Description="Define the type of command your hotkey will execute" Header="Command type">
                                        <ComboBox SelectedIndex="{Binding CommandTypeIndex, Mode=TwoWay}">
                                            <ComboBoxItem Content="{l:Static resx:Resources.Hotkey_None}" ToolTip="{l:Static resx:Resources.Hotkey_NoneDesc}" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.Hotkey_Function}" ToolTip="{l:Static resx:Resources.Hotkey_FunctionDesc}" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.Hotkey_Keystrokes}" ToolTip="{l:Static resx:Resources.Hotkey_KeystrokesDesc}" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.Hotkey_Executable}" ToolTip="{l:Static resx:Resources.Hotkey_ExecutableDesc}" />
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <!--  Custom name (only if CanCustom)  -->
                                    <ui:SettingsCard
                                        Description="Define the hotkey custom name"
                                        Header="Command name"
                                        Visibility="{Binding CanCustom, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBox Width="290" Text="{Binding CustomName, Mode=TwoWay}" />
                                    </ui:SettingsCard>

                                    <!--  Function pick (only if CommandTypeIndex == 1)  -->
                                    <ui:SettingsCard
                                        Description="Define the function to trigger"
                                        Header="Function"
                                        Visibility="{Binding CommandTypeIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=1}">
                                        <ComboBox
                                            Width="290"
                                            ItemsSource="{Binding FunctionItems}"
                                            SelectedIndex="{Binding FunctionIndex, Mode=TwoWay}">
                                            <ComboBox.Resources>
                                                <converters:SeparatorConverter x:Key="SeparatorConverter" />
                                            </ComboBox.Resources>
                                            <ComboBox.ItemContainerStyle>
                                                <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem">
                                                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                                </Style>
                                            </ComboBox.ItemContainerStyle>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentPresenter>
                                                        <ContentPresenter.Content>
                                                            <MultiBinding Converter="{StaticResource SeparatorConverter}">
                                                                <Binding Path="Text" />
                                                                <Binding Path="IsEnabled" />
                                                            </MultiBinding>
                                                        </ContentPresenter.Content>
                                                    </ContentPresenter>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <!--  QuickToolsCommands  -->
                                    <ui:SettingsCard
                                        Description="Define the page to navigate when opening Quick Tools"
                                        Header="Page"
                                        Visibility="{Binding Command, Converter={StaticResource TypeToVisibilityConverter}, ConverterParameter={x:Type cmdHC:QuickToolsCommands}}">
                                        <ComboBox SelectedIndex="{Binding WindowPageIndex, Mode=TwoWay}">
                                            <ComboBoxItem Content="Current" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.QuickHomePage_Title}" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.QuickDevicePage_Title}" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.QuickProfilesPage_Title}" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.QuickApplicationsPage_Title}" />
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <!--  MainWindowCommands  -->
                                    <ui:SettingsCard
                                        Description="Define the page to navigate when opening the main window"
                                        Header="Page"
                                        Visibility="{Binding Command, Converter={StaticResource TypeToVisibilityConverter}, ConverterParameter={x:Type cmdHC:MainWindowCommands}}">
                                        <ComboBox SelectedIndex="{Binding WindowPageIndex, Mode=TwoWay}">
                                            <ComboBoxItem Content="Current" />
                                            <ComboBoxItem Content="{l:Static resx:Resources.MainWindow_navController}" />
                                            <!--  …other pages…  -->
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <!--  OnScreenKeyboardLegacyCommands  -->
                                    <ui:SettingsCard
                                        Description="Define legacy virtual keyboard position"
                                        Header="Position"
                                        Visibility="{Binding Command, Converter={StaticResource TypeToVisibilityConverter}, ConverterParameter={x:Type cmdWIN:OnScreenKeyboardLegacyCommands}}">
                                        <ComboBox SelectedIndex="{Binding OnScreenKeyboardLegacyPosition, Mode=TwoWay}">
                                            <ComboBoxItem Content="Bottom" />
                                            <ComboBoxItem Content="Maximize" />
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <!--  CycleSubProfileCommands  -->
                                    <ui:SettingsCard
                                        Description="Define the sub profile cycling direction"
                                        Header="Direction"
                                        Visibility="{Binding Command, Converter={StaticResource TypeToVisibilityConverter}, ConverterParameter={x:Type cmdHC:CycleSubProfileCommands}}">
                                        <ComboBox SelectedIndex="{Binding CyclingDirection, Mode=TwoWay}">
                                            <ComboBoxItem Content="Previous" />
                                            <ComboBoxItem Content="Next" />
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <!--  Keystrokes (CommandTypeIndex == 2)  -->
                                    <ui:SettingsCard
                                        Description="Define the output key strokes"
                                        Header="Output"
                                        Visibility="{Binding CommandTypeIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=2}">
                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton
                                                Width="247"
                                                Height="32"
                                                Command="{Binding DefineOutputCommand}"
                                                IsChecked="{Binding IsListeningOutput, Mode=OneWay}">
                                                <TextBlock
                                                    VerticalAlignment="Center"
                                                    Style="{StaticResource CaptionTextBlockStyle}"
                                                    Text="{Binding KeyboardOutputChord}" />
                                            </ToggleButton>

                                            <Button
                                                Margin="3,0,0,0"
                                                VerticalAlignment="Stretch"
                                                Command="{Binding EraseOutputButtonCommand}">
                                                <ui:FontIcon FontFamily="{DynamicResource SymbolThemeFontFamily}" Glyph="&#xE75C;" />
                                            </Button>
                                        </StackPanel>
                                    </ui:SettingsCard>

                                    <!--  Executable (CommandTypeIndex == 3)  -->
                                    <ui:SettingsCard
                                        Description="Define the target executable"
                                        Header="Target"
                                        Visibility="{Binding CommandTypeIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=3}">
                                        <TextBox
                                            Width="290"
                                            ui:ControlHelper.PlaceholderText="Press to select an executable"
                                            IsReadOnly="True"
                                            Text="{Binding ExecutablePath, Mode=OneWay}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding TextBoxClickCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </ui:SettingsCard>

                                    <ui:SettingsCard
                                        Description="Modify the behavior of an executable during execution"
                                        Header="Arguments"
                                        Visibility="{Binding CommandTypeIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=3}">
                                        <TextBox Width="290" Text="{Binding ExecutableArguments, Mode=TwoWay}" />
                                    </ui:SettingsCard>

                                    <ui:SettingsCard
                                        Description="Specifies how a new window should appear when the process starts"
                                        Header="Window style"
                                        Visibility="{Binding CommandTypeIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=3}">
                                        <ComboBox SelectedIndex="{Binding ExecutableWindowStyle, Mode=TwoWay}">
                                            <ComboBoxItem>Normal</ComboBoxItem>
                                            <ComboBoxItem>Hidden</ComboBoxItem>
                                            <ComboBoxItem>Minimized</ComboBoxItem>
                                            <ComboBoxItem>Maximized</ComboBoxItem>
                                        </ComboBox>
                                    </ui:SettingsCard>

                                    <ui:SettingsCard
                                        Description="Start with administrator elevation"
                                        Header="Run as administrator"
                                        Visibility="{Binding CommandTypeIndex, Converter={StaticResource IndexToVisibilityConverter}, ConverterParameter=3}">
                                        <ui:ToggleSwitch HorizontalAlignment="Right" IsOn="{Binding ExecutableRunAs, Mode=TwoWay}" />
                                    </ui:SettingsCard>

                                    <!--  finally: Delete hotkey  -->
                                    <ui:SettingsCard>
                                        <Button
                                            HorizontalAlignment="Stretch"
                                            Command="{Binding DeleteHotkeyCommand}"
                                            Content="Delete hotkey"
                                            Style="{StaticResource AccentButtonStyle}" />
                                    </ui:SettingsCard>

                                </ui:SettingsExpander.Items>
                            </ui:SettingsExpander>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ikw:SimpleStackPanel>
        </ikw:SimpleStackPanel>
    </Grid>
</Page>